# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI_MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# !!!!!!!WARNING!!!!!!!! this file was edited by author, so if you run pyuic5 you will overwrite author changes


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import Qt

from PyQt5.QtGui import QPixmap, QImage
import numpy as np
import cv2 as cv
from drawinngArea import DrawingArea


import sys
import os
sys.path.append(os.path.abspath('../numberClassifier'))
from numberClassifier import NumberClassifier

# from customNN.predict import predict

class Ui_MainWindow(object):
    def __init__(self):
        self.numberClassifier = NumberClassifier()
        self.numberClassifier.load_model("../models/model_with_classes.pth")
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(370, 330)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 361, 281))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setMinimumSize(QtCore.QSize(0, 15))
        self.label_2.setMaximumSize(QtCore.QSize(16777215, 15))
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.label_2)
        self.frame = QtWidgets.QFrame(self.verticalLayoutWidget)
        self.frame.setMinimumSize(QtCore.QSize(100, 100))
        self.frame.setMaximumSize(QtCore.QSize(100, 100))
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setObjectName("frame")
        self.verticalLayout_4.addWidget(self.frame)
        self.horizontalLayout.addLayout(self.verticalLayout_4)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.verticalLayout_3.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_4.setMinimumSize(QtCore.QSize(0, 15))
        self.label_4.setMaximumSize(QtCore.QSize(16777215, 15))
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.label_resized_image = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_resized_image.setMinimumSize(QtCore.QSize(100, 100))
        self.label_resized_image.setMaximumSize(QtCore.QSize(100, 100))
        self.label_resized_image.setFrameShape(QtWidgets.QFrame.Box)
        self.label_resized_image.setText("")
        self.label_resized_image.setObjectName("label_resized_image")
        self.verticalLayout_3.addWidget(self.label_resized_image)
        self.horizontalLayout.addLayout(self.verticalLayout_3)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.pushButton_predict = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_predict.setObjectName("pushButton_predict")
        self.verticalLayout_2.addWidget(self.pushButton_predict)
        self.label_info2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_info2.setMinimumSize(QtCore.QSize(0, 15))
        self.label_info2.setMaximumSize(QtCore.QSize(16777215, 15))
        self.label_info2.setObjectName("label_info2")
        self.verticalLayout_2.addWidget(self.label_info2)
        self.label_preditcion_result = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_preditcion_result.setMinimumSize(QtCore.QSize(0, 15))
        self.label_preditcion_result.setMaximumSize(QtCore.QSize(16777215, 15))
        self.label_preditcion_result.setObjectName("label_preditcion_result")
        self.verticalLayout_2.addWidget(self.label_preditcion_result)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setMinimumSize(QtCore.QSize(0, 15))
        self.label.setMaximumSize(QtCore.QSize(16777215, 15))
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.label_prediction_info = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_prediction_info.setMinimumSize(QtCore.QSize(0, 100))
        self.label_prediction_info.setMaximumSize(QtCore.QSize(16777215, 100))
        self.label_prediction_info.setText("")
        self.label_prediction_info.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_prediction_info.setWordWrap(True)
        self.label_prediction_info.setObjectName("label_prediction_info")
        self.verticalLayout.addWidget(self.label_prediction_info)
        self.horizontalLayout_buttons = QtWidgets.QHBoxLayout()
        self.horizontalLayout_buttons.setObjectName("horizontalLayout_buttons")
        self.pushButton_reset_image = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_reset_image.setObjectName("pushButton_reset_image")
        self.horizontalLayout_buttons.addWidget(self.pushButton_reset_image)
        spacerItem1 = QtWidgets.QSpacerItem(40, 1, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_buttons.addItem(spacerItem1)
        self.pushButton_close = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_close.setObjectName("pushButton_close")
        self.horizontalLayout_buttons.addWidget(self.pushButton_close)
        self.verticalLayout.addLayout(self.horizontalLayout_buttons)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 370, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton_close.clicked.connect(self.exit)
        self.pushButton_predict.clicked.connect(self.predict)
        self.pushButton_reset_image.clicked.connect(self.reset_image)
        self.drawing_area = DrawingArea(QtCore.QSize(100, 100))   # Tworzenie obszaru do rysowania

        self.drawing_area.signal.connect(self.update_resize_image)
        layout =  QtWidgets.QHBoxLayout()
        layout.setContentsMargins(0, 0, 0, 0)
        layout.addWidget(self.drawing_area)
        self.frame.setLayout(layout)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.reset_image()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "Draw number"))
        self.label_4.setText(_translate("MainWindow", "Input image"))
        self.pushButton_predict.setText(_translate("MainWindow", "Predict"))
        self.label_info2.setText(_translate("MainWindow", "Predicted class"))
        self.label_preditcion_result.setText(_translate("MainWindow", ""))
        self.label.setText(_translate("MainWindow", "Prediction details:"))
        self.pushButton_close.setText(_translate("MainWindow", "Exit"))
        self.pushButton_reset_image.setText(_translate("MainWindow", "Reset image"))

    def exit(self):
        exit()

    def predict(self):

        cv_image = self.drawing_area.get_image()
        class_name, results = self.numberClassifier.predict(cv_image)
        self.label_preditcion_result.setText(f"{class_name}")
        result_text = "\t".join([f"{result['class_name']}: {result['pred']:.3f}" for result in results])

        self.label_prediction_info.setText(result_text)
        #TODO: add prediction info

    def reset_image(self):
        self.drawing_area.reset_image()
        pass
    def update_resize_image(self):

        cv_image = self.drawing_area.get_image()
        resized_image = cv.resize(cv_image, (28, 28))
        resized_image = 255 - resized_image
        resized_image = cv.resize(resized_image, (100, 100), interpolation = cv.INTER_AREA)

        result_pixmap = self.opencv_to_qpixmap(resized_image)
        # resized_pixmap =  result_pixmap.scaled(28, 28, Qt.KeepAspectRatio, Qt.SmoothTransformation)
        # resized_pixmap =  resized_pixmap.scaled(28*3, 28*3, Qt.KeepAspectRatio, Qt.SmoothTransformation)
        self.label_resized_image.setPixmap(result_pixmap)


    def opencv_to_qpixmap(self, cv_image):
    # Konwersja z BGR do RGB
        rgb_image = cv.cvtColor(cv_image, cv.COLOR_BGR2RGB)
        height, width, channel = rgb_image.shape
        bytes_per_line = channel * width
        # Tworzenie QImage z danych NumPy
        qimage = QImage(rgb_image.data, width, height, bytes_per_line, QImage.Format_RGB888)
        # Konwersja QImage do QPixmap
        pixmap = QPixmap.fromImage(qimage)
        return pixmap
